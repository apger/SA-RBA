[test pull request]
[Threat - RR - USB Insertion with 1st time seen Serial Number - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - USB Insertion with 1st time seen Serial Number - Combined
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 7 * * * *
schedule_window = 5
description = Attribute Risk to both Users and Systems when a USB insertion with a never before seen Serial Number is seen for the very first time.  Uses OSQuery as a datasource.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index="botsv2" sourcetype=osquery_results  TERM(USB) name="pack_hardware-monitoring_usb_devices" action="added"\
|eval rule_attack_tactic_technique=\
"initial-access - TA0001 - Hardware Additions - https://attack.mitre.org/techniques/T1200/\
|initial-access - TA0001 - Replication Through Removable Media - https://attack.mitre.org/techniques/T1091/\
|lateral-movement - TA0008 - Data from Removable Media - https://attack.mitre.org/techniques/T1025/\
|collection - TA0009 - Replication Through Removable Media - https://attack.mitre.org/techniques/T1091/\
|exfiltration - TA0010 - Exfiltration Over Physical Medium - https://attack.mitre.org/techniques/T1052/\
|command-and-control - TA0011 - Communication Through Removable Media - https://attack.mitre.org/techniques/T1092/"\
|table _time host columns.serial columns.vendor_id user* src_asset_tag dest_asset_tag user_priority rule* src*\
|eventstats earliest_time(_time) as ET by columns.serial\
|eval firstSeen=strftime(ET,"%T %D")\
|where ET > relative_time(1501762500, "-1h@h" )\
|stats values(*) as * by host,columns.serial\
| eval risk_message="USB Insertion with 1st time seen serial number (".'columns.serial'."). Vendor=".'columns.vendor_id'\
| eval threat_object = 'columns.serial'\
| eval threat_object_type = "usb"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="low"\
\
`risk_score_system(impact,confidence,host,src_category,src_priority)`\
`risk_score_user(impact,confidence,user)`

[Threat - RR - USB Insertion with 1st time seen Vendor ID - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - USB Insertion with 1st time seen Vendor ID - Combined
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 9 * * * *
schedule_window = 5
description = Attribute Risk to both Users and Systems when a USB insertion with a never before seen Vendor ID is seen for the very first time.  Uses OSQuery as a datasource.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index="botsv2" sourcetype=osquery_results  TERM(USB) name="pack_hardware-monitoring_usb_devices" action="added"\
|eval rule_attack_tactic_technique=\
"initial-access - TA0001 - Hardware Additions - https://attack.mitre.org/techniques/T1200/\
|initial-access - TA0001 - Replication Through Removable Media - https://attack.mitre.org/techniques/T1091/\
|lateral-movement - TA0008 - Data from Removable Media - https://attack.mitre.org/techniques/T1025/\
|collection - TA0009 - Replication Through Removable Media - https://attack.mitre.org/techniques/T1091/\
|exfiltration - TA0010 - Exfiltration Over Physical Medium - https://attack.mitre.org/techniques/T1052/\
|command-and-control - TA0011 - Communication Through Removable Media - https://attack.mitre.org/techniques/T1092/"\
|table _time host columns.serial columns.vendor_id user* src_asset_tag dest_asset_tag user_priority rule* src*\
|eventstats earliest_time(_time) as ET by columns.vendor_id\
|eval firstSeen=strftime(ET,"%T %D")\
|where ET > relative_time(1501762500, "-1h@h" )\
|stats values(*) as * by host,columns.vendor_id\
| eval risk_message="USB Insertion with 1st time seen Vendor ID (".'columns.vendor_id'."). Serial number=".'columns.serial'\
| eval threat_object = 'columns.vendor_id'\
| eval threat_object_type = "usb"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="low"\
`risk_score_system(impact,confidence,host,src_category,src_priority)`\
`risk_score_user(impact,confidence,user)`

[TEST]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.logevent.command = sendalert $action_name$ results_file="$results.file$" results_link="$results.url$"
action.logevent.description = Send log event to Splunk receiver endpoint
action.logevent.forceCsvResults = auto
action.logevent.icon_path = logevent.png
action.logevent.is_custom = 1
action.logevent.label = Log Event
action.logevent.maxresults = 10000
action.logevent.maxtime = 5m
action.logevent.param.index = main
action.logevent.param.source = alert:$name$
action.logevent.param.sourcetype = generic_single_line
action.logevent.payload_format = json
action.logevent.track_alert = 0
action.logevent.ttl = 10p
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.command = sendalert $action_name$ results_file="$results.file$" results_link="$results.url$"
action.webhook.description = Generic HTTP POST to a specified URL
action.webhook.forceCsvResults = auto
action.webhook.icon_path = webhook.png
action.webhook.is_custom = 1
action.webhook.label = Webhook
action.webhook.maxresults = 10000
action.webhook.maxtime = 5m
action.webhook.param.user_agent = Splunk/$server.guid$
action.webhook.payload_format = json
action.webhook.track_alert = 0
action.webhook.ttl = 10p
alert.track = 0
dispatch.earliest_time = -1h@h
dispatch.latest_time = -1d
display.general.timeRangePicker.show = 0
display.page.search.mode = verbose
search = | from datamodel:"Authentication"."Authentication" | search user=$user$

[All Tactics by Asset]
action.swimlane = 1
action.swimlane.constraint_fields = risk_object,All_Risk.risk_object
action.swimlane.constraint_method = reverse_asset_lookup
action.swimlane.drilldown_search = | from datamodel:"Risk"."All_Risk" | search $constraints$ source="Threat*"
action.swimlane.title = Observed ATT&CK Tactics
search = | tstats `summariesonly` values(All_Risk.risk_object) as risk_object, values(All_Risk.risk_object_type) as risk_object_type, values(All_Risk.rule_attack_tactic_technique) as rule_attack_tactic_technique, sum(All_Risk.risk_score) as risk_score, count from datamodel=Risk.All_Risk where source="Threat*" $constraints$ by _time span=$span$\
| mvexpand rule_attack_tactic_technique\
|rex field=rule_attack_tactic_technique "(^|\|)(?<tactic>.+?) - (?<tactic_num>.+?) - (?<technique>.+?) - (?<technique_ref>.*)"\
| stats values(tactic) as Tactic values(risk_object) as risk_object values(count) as count values(risk_score) as "Risk Score for Timeslice" by _time

[All Techniques by Asset]
action.swimlane = 1
action.swimlane.constraint_fields = risk_object,All_Risk.risk_object
action.swimlane.constraint_method = reverse_asset_lookup
action.swimlane.drilldown_search = | from datamodel:"Risk"."All_Risk" | search $constraints$ source="Threat*"
action.swimlane.title = Observed ATT&CK Techniques
search = | tstats `summariesonly` values(All_Risk.risk_object) as risk_object, values(All_Risk.risk_object_type) as risk_object_type, values(All_Risk.rule_attack_tactic_technique) as rule_attack_tactic_technique, sum(All_Risk.risk_score) as risk_score, count from datamodel=Risk.All_Risk where source="Threat*" $constraints$ by _time span=$span$\
| mvexpand rule_attack_tactic_technique\
|rex field=rule_attack_tactic_technique "(^|\|)(?<tactic>.+?) - (?<tactic_num>.+?) - (?<technique>.+?) - (?<technique_ref>.*)"\
| stats values(technique) as Technique values(risk_object) as risk_object values(count) as count values(risk_score) as "Risk Score for Timeslice" by _time

[All Techniques By User]
action.swimlane = 1
action.swimlane.constraint_fields = risk_object,All_Risk.risk_object
action.swimlane.constraint_method = reverse_identity_lookup
action.swimlane.drilldown_search = | from datamodel:"Risk"."All_Risk" | search $constraints$ source="Threat*"
action.swimlane.title = Observed ATT&CK Techniques
search = | tstats `summariesonly` values(All_Risk.risk_object) as risk_object, values(All_Risk.risk_object_type) as risk_object_type, values(All_Risk.rule_attack_tactic_technique) as rule_attack_tactic_technique, sum(All_Risk.risk_score) as risk_score, count from datamodel=Risk.All_Risk where source="Threat*" $constraints$ by _time span=$span$\
| mvexpand rule_attack_tactic_technique\
| rex field=rule_attack_tactic_technique "(^|\|)(?<tactic>.+?) - (?<technique_num>.+?) - (?<technique>.+?) - (?<technique_ref>.*)"\
| stats values(technique) as Technique values(risk_object) as risk_object values(count) as count values(risk_score) as "Risk Score for Timeslice" by _time

[All_Tactics_By_User]
action.swimlane = 1
action.swimlane.constraint_fields = risk_object,All_Risk.risk_object
action.swimlane.constraint_method = reverse_identity_lookup
action.swimlane.drilldown_search = | from datamodel:"Risk"."All_Risk" | search $constraints$ source="Threat*"
action.swimlane.title = Observed ATT&CK Tactics
search = | tstats `summariesonly` values(All_Risk.risk_object) as risk_object, values(All_Risk.risk_object_type) as risk_object_type, values(All_Risk.rule_attack_tactic_technique) as rule_attack_tactic_technique, sum(All_Risk.risk_score) as risk_score, count from datamodel=Risk.All_Risk where source="Threat*" $constraints$  by _time span=$span$\
| mvexpand rule_attack_tactic_technique\
| rex field=rule_attack_tactic_technique "(^|\|)(?<tactic>.+?) - (?<technique_num>.+?) - (?<technique>.+?) - (?<technique_ref>.*)"\
| stats values(tactic) as Tactic values(risk_object) as risk_object values(count) as count values(risk_score) as "Risk Score for Timeslice" by _time

[Threat - RR - DDNS Activity Detected - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - DDNS Activity Detected - System
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 11 * * * *
schedule_window = 5
description = DDNS is often used by malicious players, we need to be on the lookout for this.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | from datamodel:Network_Resolution.DNS \
| search _time < 1501848000 record_type="A" `Exclude_DNS_Server_src_ip` \
| eval list="iana" \
| `ut_parse(query,list)` \
| fields ut_domain,src,query \
| bucket _time span=5m \
| stats count by ut_domain,query,src _time \
| lookup DDNS_lookup domain as ut_domain \
| search provider=* \
\
| eval rule_attack_tactic_technique=\
    "establish_and_maintain_infrastructure - TA0022 - Dynamic DNS - https://attack.mitre.org/techniques/T1333/\
|command-and-control - TA0011 - Standard Application Layer Protocol - https://attack.mitre.org/techniques/T1071/\
|adversary_opsec - TA0021 - Dynamic DNS - https://attack.mitre.org/techniques/T1311/" \
| lookup dhcpLogs dest_ip as src OUTPUT dest_nt_host as host \
| eval risk_message="DDNS activity detected (".ut_domain.") via query=".query." and provider=".provider \
| eval threat_object = ut_domain\
| eval threat_object_type = "domain"\
\
| eval TESTMODE=0 \
| eval impact="low" \
| eval confidence="low"\
`risk_score_system(impact,confidence,host,src_category,src_priority)`

[Threat - RR - DNS Activity to External IP Detected - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - DNS Activity to External IP Detected - System
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk = 0
action.risk.param._risk_object = host
action.risk.param._risk_object_type = system
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 13 * * * *
schedule_window = 5
description = Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
display.page.search.mode = verbose
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | tstats `summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=53 All_Traffic.src_ip!="10.0.1.100" All_Traffic.dest_ip!="10.0.1.100" All_Traffic.dest_ip!="8.8.8.8" All_Traffic.dest_ip!="4.4.4.4" All_Traffic.dest_ip!="172.31.0.2" by All_Traffic.dest_ip All_Traffic.src_ip \
| rename All_Traffic.dest_ip AS dest_ip All_Traffic.src_ip AS src_ip \
| rename category as src_category priority as src_priority \
| lookup frothly_assets ip as src_ip \
\
| eval rule_attack_tactic_technique="command-and-control - TA00113 - Commonly Used Port - https://attack.mitre.org/techniques/T1043/" \
| eval risk_message="Prohibited DNS activity to external IP (".dest_ip.") by system=".nt_host \
| eval threat_object = dest_ip \
| eval threat_object_type = "ip" \
\
| eval TESTMODE=0 \
| eval impact="low" \
| eval confidence="low"\
`risk_score_system(impact,confidence,nt_host,src_category,src_priority)`

[Threat - RR - Process Discrepancy Detected - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Process Discrepancy Detected - System
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 15 * * * *
schedule_window = 5
description = Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. Several different variations of this technique have been observed. One variant is for an executable to be placed in a commonly trusted directory or given the name of a legitimate, trusted program. Alternatively, the filename given may be a close approximation of legitimate programs. This is done to bypass tools that trust executables by relying on file name or path, as well as to deceive defenders and system administrators into thinking a file is benign by associating the name with something that is thought to be legitimate.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = index=botsv2 sourcetype=osquery_results columns.cwd="/Users*" \
| rename columns.name as name, columns.cmdline as cmdline\
| eval dest=host, result=if(like(cmdline,"%".name."%"),"Normal","Evil") \
| table _time dest result name cmdline \
|search result="Evil"\
| eval rule_attack_tactic_technique="defense-evasion - TA0005 - Masquerading - https://attack.mitre.org/techniques/T1036/"\
| eval risk_message="Process Discrepancy (".cmdline." as ".name.") on system=".dest\
| eval threat_object = cmdline\
| eval threat_object_type = "cmdline"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="low"\
\
`risk_score_system(impact,confidence,dest,dest_category,dest_priority)`

[Threat - RR - Prohibited Process Detected - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Prohibited Process Detected - System
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 17 * * * *
schedule_window = 5
description = An adversary may stage software and tools for use during later stages of an attack. The software and tools may be placed on systems legitimately in use by the adversary or may be placed on previously compromised infrastructure.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | from datamodel:"Endpoint"."Processes" \
|search _time < 1501848000\
|bin span=1h _time\
|lookup interesting_processes_lookup app as process,dest OUTPUTNEW is_required,is_prohibited,is_secure,note \
| fillnull value="undefined" is_required,is_prohibited,is_secure \
|`lower(is_required)` \
|`lower(is_prohibited)` \
|`lower(is_secure)` \
| search is_prohibited=true \
| fields + _time,event_hash,_raw,dest,process,note,dest_category,dest_priority\
|stats count min(_time) as _time values(dest_category) as dest_category values(dest_priority) as dest_priority by dest,process,note\
|eval _time=strftime(_time,"%F %T")\
\
| eval rule_attack_tactic_technique="defense-evasion - TA0005 - Masquerading - https://attack.mitre.org/techniques/T1036/|stage_capabilities - T1362 - Upload, install, and configure software/tools - https://attack.mitre.org/techniques/T1362/"\
| eval risk_message="Prohibited Process Detected (".process.") on host=".dest \
| eval threat_object = process\
| eval threat_object_type = "process"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="medium"\
`risk_score_system(impact,confidence,dest,dest_category,dest_priority)`

[Threat - RR - Threat Intel Match on DNS Domain request - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Threat Intel Match on DNS Domain request - System
action.customsearchbuilder.spec = {}
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.rba.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 19 * * * *
schedule_window = 5
description = Threat Intelligence match discovered for a DNS request.  The source for the intel is local_domain_intel.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | from datamodel:Network_Resolution.DNS | search _time < 1501848001 record_type="A" `Exclude_DNS_Server_src_ip` | eval list="iana" | `ut_parse(query,list)` | fields ut_domain,src,query | bucket _time span=5m | stats count as queryCount by query,ut_domain,src _time | lookup local_domain_intel domain as ut_domain OUTPUT description | search description=* | lookup dhcpLogs dest_ip as src OUTPUT dest_nt_host as host\
|eval risk_message="DNS request to locally sourced domain IOC (".ut_domain."). Query=".query.". Threat Intel Desc=".description \
| eval threat_object = ut_domain\
| eval threat_object_type = "domain"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="medium"\
`risk_score_system(impact,confidence,host,src_category,src_priority)`

[Threat - RR - DNS Query For Potential DGA Domain - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - DNS Query For Potential DGA Domain - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 21 * * * *
description = A DNS query was made to a domain that is suspicious based on having high entropy and a low standard deviation.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | tstats summariesonly=true count max(_time) as _time from datamodel=Network_Resolution.DNS where DNS.record_type=A DNS.src="10.*"  by DNS.query, DNS.src\
| `drop_dm_object_name("DNS")` \
| eval list="*" \
| `ut_parse_extended(query,list)` \
| lookup dns_exclusions.csv domain AS ut_domain OUTPUT domain \
| search NOT(ut_domain="None" OR domain=*) \
| lookup alexa_lookup_by_str domain AS ut_domain \
| search NOT(rank=*) \
| `ut_shannon(ut_subdomain)` \
| eval subdomain_length = length(ut_subdomain) \
| stats count(ut_subdomain) as count avg(ut_shannon) as avg_sha stdev(ut_shannon) as stdev_sha avg(subdomain_length) as avg_sublen stdev(subdomain_length) as stdev_sublen, values(src) as src, values(query) as query, max(_time) as _time by ut_domain \
| eval avg_sha = round(avg_sha, 1) \
| eval avg_sublen = round(avg_sublen, 1) \
| eval stdev_sha = round(stdev_sha, 2) \
| eval stdev_sublen = round(stdev_sublen, 1) \
| where avg_sha > 3 AND avg_sublen > 20 AND stdev_sublen < .5 and count > 1  \
\
| mvexpand query\
| mvexpand src\
| where src!="10.0.1.100"\
| rename src as src_ip, ut_domain as dest_system\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_system\
        ]\
| eval src_system=coalesce(src_system,src_ip)\
\
| eval rule_attack_tactic_technique=\
"command-and-control - TA0011 - Domain Generation Algorithms - https://attack.mitre.org/techniques/T1483/" \
\
| eval risk_message="A DNS query was made to a domain (".query.") that is suspicious based on having high entropy and a low standard deviation."\
| eval threat_object = dest_system\
| eval threat_object_type = "domain"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="low"\
\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_system(impact,confidence,dest_system,src_category,src_priority)`

[Threat - RR - Intrusion Detection Event - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Intrusion Detection Event - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 21 * * * *
schedule_window = 5
description = Intrusion detection events found that may indicate malicious activity in the environment.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | from datamodel:Intrusion_Detection.IDS_Attacks \
| search signature!="unknown" (src=TERM(10.0.4.2) OR src=TERM(10.0.2.107) OR src=TERM(10.0.2.109)) \
\
| rex field=_raw "dest_ip.:.(?<dest_ip>[^\"]*?)\".*?dest_port.:(?<dest_port>\d+).*payload.:.(?<payload>[^\"]*)\"" \
| table src,dest_ip,dest_port, payload, signature, severity, user, category,action, _time \
\
| rename src as src_ip \
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp \
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ] \
| eval src_system=coalesce(src_dhcp,src_dns,src_ip) \
\
| eval rule_attack_tactic_technique=case(category="A Network Trojan was detected",\
    "command-and-control - TA0011 - Commonly Used Port - https://attack.mitre.org/techniques/T1043/\
|command-and-control - TA0011 - Standard Application Layer Protocol - https://attack.mitre.org/techniques/T1071/",\
    category="Generic Protocol Command Decode",\
    "command-and-control - TA0011 - Data Encoding - https://attack.mitre.org/techniques/T1132/\
|command-and-control - TA0011 - Standard Application Layer Protocol - https://attack.mitre.org/techniques/T1071/"\
    ) \
| eval risk_message="Intrusion alert detected (".signature.") via category=".category." and action=".action \
| eval threat_object = payload\
| eval threat_object_type = "payload"\
\
\
| eval TESTMODE=0 \
| eval impact=case(action="allowed","high",action="blocked","low",1=1,"medium") \
| eval confidence=case(severity="critical" OR severity="high","high",severity="medium","medium", severity="low","low",1=1,"medium")\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`

[Threat - RR - Long Network Connection - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Long Network Connection - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 23 * * * *
description = Long network connections, excess of 3 hours, may indication an open malicious connection or callback.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | tstats `summariesonly` count, max(_time) as _time from datamodel=Network_Traffic.All_Traffic where All_Traffic.duration>10800 by All_Traffic.src_ip, All_Traffic.dest_ip, All_Traffic.dest_port, All_Traffic.duration, All_Traffic.dest_zone, sourcetype \
| `drop_dm_object_name("All_Traffic")`\
\
| search (src_ip=TERM(10.0.4.2) OR src_ip=TERM(10.0.2.107) OR src_ip=TERM(10.0.2.109))\
\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| lookup dnslookup clientip as dest_ip OUTPUT clienthost as dest_dns\
| eval dest_system=coalesce(dest_dns,dest_ip) \
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
| eval rule_attack_tactic_technique=\
"command-and-control - TA0011 - Fallback Channels - https://attack.mitre.org/techniques/T1008/\
|command-and-control - TA0011 - Standard Application Layer Protocol - https://attack.mitre.org/techniques/T1071/" \
\
| eval risk_message="Network connection exceeding 3 hours detected to (".dest_system.") via dest_port=".dest_port\
| eval threat_object = dest_ip\
| eval threat_object_type = "ip"\
\
| eval TESTMODE=0\
| eval impact="medium"\
| eval confidence="low"\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_system(impact,confidence,dest_system,src_category,src_priority)`\


[Threat - RR - Non-Standard Port Web Traffic - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Non-Standard Port Web Traffic - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 25 * * * *
description = This identifies web traffic not over port 80 or 443 from an internal ip to an external ip.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = |from datamodel:Web.Web\
| search src="10.*" dest!="10.*"\
\
| eval list="mozilla" \
| `ut_parse_extended(url,list)`\
| where ut_port!="80" AND ut_port!="443"\
| stats count, max(_time) as _time by url, dest, src, ut_port, sourcetype\
\
| rename src as src_ip, dest as dest_ip\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| lookup dnslookup clientip as dest_ip OUTPUT clienthost as dest_dns\
| eval dest_system=coalesce(dest_dns,dest_ip) \
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
| eval rule_attack_tactic_technique=\
"command-and-control - TA0011 - Uncommonly Used Port - https://attack.mitre.org/techniques/T1065/"\
\
| eval risk_message="An http connection was connected over a non-standard port(".dest_port.") to an external source(".dest_system.")."\
\
| eval threat_object = dest_ip\
| eval threat_object_type = "ip"\
\
| eval TESTMODE=0\
| eval impact="medium"\
| eval confidence="low"\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_system(impact,confidence,dest_system,src_category,src_priority)`

[Threat - RR - Security Control Disabled - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Security Control Disabled - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 27 * * * *
description = Identifies commands that result in the Windows Firewall being disabled.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=botsv2 sourcetype="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" cmdline="*netsh.exe*" cmdline="*off*"\
| table process, parent_process,dvc_ip,user,cmdline, _time\
\
| rename dvc_ip as src_ip\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
| eval src_user=mvindex(split(user,"\\"),1)\
\
| eval rule_attack_tactic_technique=\
"defense-evasion - TA0005 - Disabling Security Tools - https://attack.mitre.org/techniques/T1089/" \
\
| eval risk_message="A command was found disabling a security control."\
| eval threat_object = process\
| eval threat_object_type = "process"\
\
| eval TESTMODE=0\
| eval impact="high"\
| eval confidence="high"\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_user(impact,confidence,src_user)`\


[Threat - RR - Suspicious Developer Utility Command - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious Developer Utility Command - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 29 * * * *
description = A suspicious developer utility, csc.exe, command was found to be executing.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=botsv2 sourcetype="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" cmdline="*csc.exe*/noconfig*"\
| table process, parent_process,dvc_ip,user,cmdline,_time\
\
| rename dvc_ip as src_ip\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
| eval src_user=mvindex(split(user,"\\"),1)\
\
| eval rule_attack_tactic_technique=\
"execution - TA0002 - Trusted Developer Utilities - https://attack.mitre.org/techniques/T1127/" \
\
| eval risk_message="A suspicious developer utility, csc.exe, command was found to be executing."\
| eval threat_object = process\
| eval threat_object_type = "process"\
\
| eval TESTMODE=0\
| eval impact="high"\
| eval confidence="medium"\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_user(impact,confidence,src_user)`

[Threat - RR - Suspicious PowerShell Command - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious PowerShell Command - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 31 * * * *
description = Identifies PowerShell running with the -nop flag also set
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=botsv2 sourcetype="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" cmdline="*powershell*-nop*"\
| table process, parent_process,dvc_ip,user,cmdline,_time\
\
| rename dvc_ip as src_ip\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
| eval src_user=mvindex(split(user,"\\"),1)\
\
| eval rule_attack_tactic_technique=\
"execution - TA0002 - PowerShell - https://attack.mitre.org/techniques/T1086/" \
\
| eval risk_message="A suspicious PowerShell command was found to be executing."\
| eval threat_object = process\
| eval threat_object_type = "process"\
\
| eval TESTMODE=0\
| eval impact="high"\
| eval confidence="medium"\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_user(impact,confidence,src_user)`

[Threat - RR - Suspicious Scheduled Task - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious Scheduled Task - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 33 * * * *
description = A scheduled task was created with a suspicious hidden window command.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=botsv2 sourcetype="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" process="schtasks.exe" cmdline="*-w hidden*"\
| table process, parent_process,dvc_ip,user,cmdline,_time\
\
| rename dvc_ip as src_ip\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
| eval src_user=mvindex(split(user,"\\"),1)\
\
| eval rule_attack_tactic_technique=\
"persistence - TA0003 - Scheduled Task - https://attack.mitre.org/techniques/T1053/" \
\
| eval risk_message="A scheduled task was created with a suspicious hidden window command."\
| eval threat_object = process\
| eval threat_object_type = "process"\
\
| eval TESTMODE=0\
| eval impact="high"\
| eval confidence="medium"\
\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_user(impact,confidence,src_user)`

[Threat - RR - Suspicious SSL Certificate - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious SSL Certificate - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 35 * * * *
description = A potentially invalid or suspicious SSL Certificate was identified.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | tstats `summariesonly` max(_time) as _time,values(All_Certificates.SSL.ssl_subject) as ssl_subject,values(All_Certificates.SSL.ssl_issuer) as ssl_issuer,values(All_Certificates.SSL.ssl_hash) as ssl_hash,count from datamodel=Certificates.All_Certificates where nodename=All_Certificates.SSL All_Certificates.SSL.ssl_subject!="*CN \=*" All_Certificates.SSL.ssl_subject!="*O \=*" All_Certificates.SSL.ssl_subject!="unknown" by All_Certificates.src,All_Certificates.dest,All_Certificates.SSL.ssl_serial \
| `drop_dm_object_name(All_Certificates)` \
| `drop_dm_object_name(SSL)` \
| sort - count \
| fields _time, src, dest, ssl_subject, ssl_issuer, ssl_serial, ssl_hash, count\
\
| rename src as src_ip, dest as dest_ip\
| lookup dnslookup clientip as dest_ip OUTPUT clienthost as dest_dns\
| eval dest_system=coalesce(dest_dns,dest_ip) \
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
\
| eval rule_attack_tactic_technique=\
"defense-evasion - TA0005 - Code Signing - https://attack.mitre.org/techniques/T1116/" \
\
| eval risk_message="A potentially invalid or malicious SSL Certificate was identified Subject=(".ssl_subject.") and Issuer=(".ssl_issuer.")"\
| eval threat_object = ssl_hash\
| eval threat_object_type = "ssl_hash"\
\
| eval TESTMODE=0\
| eval impact="medium"\
| eval confidence="low"\
`risk_score_system("medium","low",src_system,src_category,src_priority)`\
`risk_score_system("medium","low",dest_system,src_category,src_priority)`

[Threat - RR - System Information discovery - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - System Information discovery - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 37 * * * *
description = Suspicious commands used to discover system information
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=botsv2 sourcetype="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" (process="net.exe" OR process="whoami.exe") cmdline="*"\
| table process, parent_process,dvc_ip,user,cmdline,_time\
\
| rename dvc_ip as src_ip\
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_system\
| eval src_system=coalesce(src_system,src_ip)\
\
| eval src_user=mvindex(split(user,"\\"),1)\
\
| eval rule_attack_tactic_technique=\
"discovery - TA0007 - System Information discovery - https://attack.mitre.org/techniques/T1082/" \
\
| eval risk_message="A command was found that is associated with discovering system information, cmd=".cmdline\
| eval threat_object = process\
| eval threat_object_type = "process"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="medium"\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_user(impact,confidence,src_user)`

[Threat - RR - Threat Intel File Activity - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Threat Intel File Activity - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 39 * * * *
description = This search utilizes the threat intel file collection for matches on suspicious files executing.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | from datamodel:"Threat_Intelligence"."Threat_Activity" \
| search threat_collection="file"\
| table src, dest, threat_match_field, threat_match_value,_time\
\
| rename src as src_ip, dest as dest_ip\
| lookup dnslookup clientip as dest_ip OUTPUT clienthost as dest_dns\
| eval dest_system=coalesce(dest_dns,dest_ip) \
| lookup dhcpLogs dest_ip as src_ip OUTPUT dest_nt_host as src_dhcp\
| join type=left src_ip \
    [| inputlookup frothly_assets \
    | fields ip dns \
    | rename ip as src_ip, dns as src_dns\
        ]\
| eval src_system=coalesce(src_dhcp,src_dns,src_ip)\
\
\
| eval rule_attack_tactic_technique=\
"execution - TA0002 - User execution - TA0002://attack.mitre.org/techniques/T1204/" \
\
| eval risk_message="A potentially malicious file (".threat_match_value.") was found connecting within the environment."\
| eval threat_object = threat_match_value\
| eval threat_object_type = threat_match_field\
\
| eval TESTMODE=0\
| eval impact="medium"\
| eval confidence="high"\
| eval src_category="", src_priority=""\
`risk_score_system(impact,confidence,src_system,src_category,src_priority)`\
`risk_score_system(impact,confidence,dest_system,src_category,src_priority)`

[Threat - RR - User Account Changes - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - User Account Changes - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 41 * * * *
description = Local user account changes were identified and may indicate compromise.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | tstats summariesonly=true count from datamodel=Change_Analysis.All_Changes where nodename=All_Changes.Account_Management groupby _time span=1s All_Changes.vendor_product All_Changes.dest All_Changes.user All_Changes.src All_Changes.action All_Changes.status All_Changes.dvc All_Changes.Account_Management.src_user All_Changes.object All_Changes.object_category All_Changes.result All_Changes.result_id \
| `drop_dm_object_name("All_Changes")` \
| `drop_dm_object_name("Account_Management")` \
| join type=left dest \
    [| `assets` \
    | table ip, dns \
    | rename ip as dest_ip, dns as dest\
        ] \
| table _time vendor_product result_id result status user src_user action dest_ip object object_category dest\
\
|eval rule_attack_tactic_technique=\
"credential-access - TA0006 - Account Manipulation - https://attack.mitre.org/techniques/T1098/" \
\
|eval risk_message="A local account change was identified, ".result." target account=".user\
\
|eval TESTMODE=0\
| eval impact="low"\
| eval confidence="low"\
`risk_score_system(impact,confidence,dest,src_category,src_priority)`\
`risk_score_user(impact,confidence,src_user)`

[Threat - RR - Potential Phish With Attachment - User - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Potential Phish With Attachment - User
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 41 * * * *
schedule_window = 5
description = Identifies potential phishing emails with an attachment and then applies risk to the user receiving the email.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | from datamodel:Email.All_Email \
| search (file_name="*.zip" OR file_name="*.doc" OR file_name="*.xls" OR file_name="*.docm" OR file_name="*.xlsm") \
| eval action=if((action="delivered") AND (action!="quarantine"),"Delivered", "Not Delivered") \
| stats count as message_count, count(eval(action="Not Delivered")) as blocked_messages, count(eval(action="Delivered")) as allowed_messages, values(file_name) as file_name, values(file_hash) as file_hash, values(recipient) as recipient, values(src_user) as sender, max(_time) as last_sent, min(_time) as first_sent by subject \
| eval difference=last_sent-first_sent \
| eval blocked_rate=blocked_messages/message_count \
| mvexpand recipient \
| join type=left recipient \
    [| from datamodel:"Identity_Management.All_Identities" \
    |search email="*froth.ly"\
    | fields email,identity \
    | mvexpand identity \
    | where like(identity,"%frothly\\%") \
    | eval identity=mvindex(split(identity,"\\"),1) \
    | rename email as recipient, identity as src_user]\
\
| eval rule_attack_tactic_technique=\
"initial-access - TA0001 - Spearphishing Attachment - https://attack.mitre.org/techniques/T1193/" \
\
| eval risk_message="A potential spearphishing email was sent to ".src_user." with an attachment, ".file_name.", from  ".sender\
| eval threat_object = file_hash\
| eval threat_object_type = "filehash"\
\
| eval TESTMODE=0\
| eval impact="low"\
| eval confidence="low"\
\
`risk_score_user(impact,confidence,src_user)`

[RBA:  Threat - RIR - 24 hour risk threshold exceeded - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RIR - 24 hour risk threshold exceeded
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable = 1
action.notable.param.drilldown_name = View the individual Risk Attributions
action.notable.param.drilldown_search = |from datamodel:"Risk.All_Risk"|search risk_object=$risk_object$ source="Threat*"|table _time risk_object risk_object_type risk_message source risk_score rule_attack_tactic_technique |eventstats sum(risk_score) as risk_scoreSum by risk_object
action.notable.param.extract_artifacts = {"asset": ["src", "dest", "dvc", "orig_host"], "identity": ["src_user", "user"]}
action.notable.param.extract_assets =
action.notable.param.extract_identities =
action.notable.param.next_steps = {"version":1,"data":"View the above Contributing Events which will show you the risk attributions."}
action.notable.param.rule_description = RBA:  Risk Threshold Exceeded for an object over a 24 hour period
action.notable.param.rule_title = RBA:  24 hour risk threshold exceeded for $risk_object_type$=$risk_object$ spanning $sourceCount$ Risk Rules, $tacticCount$, ATT&CK tactics, and $techniqueCount$ ATT&CK techniques
action.notable.param.security_domain = threat
action.notable.param.severity = high
action.notable.param.verbose = 0
alert.suppress = 1
alert.suppress.fields = sourceCount,tacticCount,techniqueCount,risk_object
alert.suppress.period = 21600s
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = RBA: Risk Threshold exceeded for an object within the previous 24 hours.
disabled = 1
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | from datamodel:"Risk.All_Risk" \
| search source="Threat - RR*" \
| table _time, risk_object risk_object_type risk_message source risk_score rule_attack_tactic_technique \
| makemv delim="|" rule_attack_tactic_technique \
| mvexpand rule_attack_tactic_technique \
| rex field=rule_attack_tactic_technique "(^|\|)(?<tactic>.+?) - (?<tactic_num>.+?) - (?<technique>.+?) - (?<technique_ref>.*)" \
| streamstats reset_after="("max_time-min_time>86400")" sum(risk_score) as risk_ScoreSum \
    min(_time) as min_time\
    max(_time) as max_time\
    dc(source) as sourceCount \
    dc(tactic) as tacticCount \
    dc(technique) as techniqueCount\
    by risk_object,risk_object_type \
| stats sum(risk_score) as risk_ScoreSum \
    values(risk_message) as risk_message \
    min(min_time) as min_time\
    max(sourceCount) as sourceCount \
    values(source) as source \
    values(rule_attack_tactic_technique) as rule_attack_tactic_technique \
    max(tacticCount) as tacticCount \
    values(tactic) as tactic \
    max(techniqueCount) as techniqueCount\
    values(technique) as technique\
    by risk_object,risk_object_type,max_time \
| eval risk_duration=max_time-min_time \
| where risk_ScoreSum > 100 and risk_duration<86400 \
| eval risk_duration=tostring(risk_duration,"duration")\
| eval severity=case(risk_ScoreSum>=100 and risk_ScoreSum<250,"medium",\
    risk_ScoreSum>=250 and risk_ScoreSum <500,"high",\
    risk_ScoreSum>=500,"critical") \
| eval message="24 hour risk threshold exceeded for ".risk_object_type."=".risk_object." spanning ".sourceCount." Risk Rules, ".tacticCount." ATT&CK tactics, and ".techniqueCount." ATT&CK techniques"\


[RBA:  Threat - RIR - 7 day ATT&CK Tactic threshold exceeded - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RIR - 7 day ATT&CK Tactic threshold exceeded
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable = 1
action.notable.param.drilldown_name = View the individual Risk Attributions
action.notable.param.drilldown_search = |from datamodel:"Risk.All_Risk"|search risk_object=$risk_object$ source="Threat*" |table _time risk_object risk_object_type risk_message source risk_score rule_attack_tactic_technique |eventstats sum(risk_score) as risk_scoreSum by risk_object
action.notable.param.extract_artifacts = {"asset": ["src", "dest", "dvc", "orig_host"], "identity": ["src_user", "user"]}
action.notable.param.extract_assets =
action.notable.param.extract_identities =
action.notable.param.next_steps = {"version":1,"data":"View the above Contributing Events which will show you the risk attributions.\n"}
action.notable.param.rule_description = RBA:  ATT&CK tactic Threshold Exceeded for an object over the previous 7 days
action.notable.param.rule_title = RBA:  ATT&CK Tactic threshold exceeded (>=3) over previous 7 days for $risk_object_type$=$risk_object$ spanning $sourceCount$ Risk Rules, $tacticCount$ ATT&CK tactics, and $techniqueCount$ ATT&CK techniques
action.notable.param.security_domain = threat
action.notable.param.severity = high
action.notable.param.verbose = 0
alert.suppress = 1
alert.suppress.fields = sourceCount,tacticCount,techniqueCount,risk_object
alert.suppress.period = 21600s
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = RBA:  ATT&CK tactic Threshold exceeded for an object within the previous 7 days.
disabled = 1
dispatch.earliest_time = -7d
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = | from datamodel:"Risk.All_Risk" \
| search source="Threat - RR*" \
| table _time, risk_object risk_object_type risk_message source risk_score rule_attack_tactic_technique \
| makemv delim="|" rule_attack_tactic_technique \
| mvexpand rule_attack_tactic_technique \
| rex field=rule_attack_tactic_technique "(^|\|)(?<tactic>.+?) - (?<tactic_num>.+?) - (?<technique>.+?) - (?<technique_ref>.*)" \
| streamstats reset_after="("max_time-min_time>604800")" sum(risk_score) as risk_ScoreSum \
    min(_time) as min_time\
    max(_time) as max_time\
    dc(source) as sourceCount \
    dc(tactic) as tacticCount \
    dc(technique) as techniqueCount\
    by risk_object,risk_object_type \
| stats sum(risk_score) as risk_ScoreSum \
    values(risk_message) as risk_message \
    min(min_time) as min_time\
    max(sourceCount) as sourceCount \
    values(source) as source \
    values(rule_attack_tactic_technique) as rule_attack_tactic_technique \
    max(tacticCount) as tacticCount \
    values(tactic) as tactic \
    max(techniqueCount) as techniqueCount\
    values(technique) as technique\
    by risk_object,risk_object_type,max_time \
| eval risk_duration=max_time-min_time \
| where tacticCount >=3 and sourceCount >=4 and risk_duration < 604800 \
| eval risk_duration=tostring(risk_duration,"duration") \
| eval severity=case(risk_ScoreSum>=100 and risk_ScoreSum<250,"medium",\
    risk_ScoreSum>=250 and risk_ScoreSum <500,"high",\
    risk_ScoreSum>=500,"critical") \
| eval message="ATT&CT Tactic threshold exceeded (>=3) over previous 7 days for ".risk_object_type."=".risk_object." spanning ".sourceCount." Risk Rules, ".tacticCount." ATT&CK tactics, and ".techniqueCount." ATT&CK techniques"

[Threat - RR - Command and Control Activity Detected - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Command and Control Activity Detected - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 43 * * * *
schedule_window = 5
description = A network connection was made to a risky host which has exhibited malicious activity and detected by Windows Defender.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=CommandAndControl \
|table _time,MachineName,UserName,CommandLine,Description,FileHash,FileName,FilePath,LogOnUsers,IpAddress,Url,src_user \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|eval CommandLineShort=if(len(CommandLine)>100,substr(CommandLine,1,100)."..<cut>",CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
|rex field=Description ".*contents: (?<remoteCC>.*)" \
|eval dest=coalesce(remoteCC,IpAddress) \
|eval dest=ipAddress \
\
|eval risk_message=Description." CommandLine=".CommandLineShort.". LoggedOnUsers=".LogOnUsers." Remote IP=".IpAddress.". URL=".Url \
|eval mitre_technique_id="T1071" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval threat_object=if(len(Url)>1,Url,CommandLine) \
|eval threat_object_type=if(len(Url)>1,"url","commandline") \
|eval testmode=0 \
`risk_score_user(user,5)` \
`risk_score_system(src,5)` \
|where len(IpAddress)> 1 \
`risk_score_system(IpAddress,5)`

[Threat - RR - Credential Theft Tool Detected - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Credential Theft Tool Detected - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 45 * * * *
schedule_window = 5
description = A known credential theft tool execution command line was detected by Windows Defender. Either the process itself or its command line indicated an intent to dump users' credentials, keys, plain-text passwords and more.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=Discovery \
|table _time,MachineName,UserName,CommandLine,Description,FileHash,FileName,FilePath,LogOnUsers \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|eval CommandLineShort=if(len(CommandLine)>100,substr(CommandLine,1,100)."..<cut>",CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=Description."FilePath=".FilePath." CommandLine=".CommandLineShort.". LoggedOnUsers=".LogOnUsers." FileHash=".FileHash \
|eval mitre_technique_id="T1087" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Suspisious Process or DLL detected - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspisious Process or DLL detected - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 49 * * * *
schedule_window = 5
description = Windows Defender detected process abnormally injecting code into another process or suspicious memory allocation patterns, As a result, unexpected code may be running in the target process memory. Injection is often used to hide malicious code execution within a trusted process. \
As a result, the target process may exhibit abnormal behaviors such as opening a listening port or connecting to a command and control server.  Pentesting frameworks, like Metasploit, reflectively load the meterpreter dll, which provides an attacker with backdoor access to the machine.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=DefenseEvasion \
|table _time,MachineName,UserName,CommandLine,Description,FileHash,FileName,FilePath,LogOnUsers \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|eval CommandLineShort=if(len(CommandLine)>100,substr(CommandLine,1,100)."..<cut>",CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=Description."FilePath=".FilePath." CommandLine=".CommandLineShort.". LoggedOnUsers=".LogOnUsers." FileHash=".FileHash \
|eval mitre_technique_id="T1055" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval threat_object=CommandLine \
|eval threat_object_type="commandline" \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Suspicious activity or known framework detected  - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious activity or known framework detected  - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 51 * * * *
schedule_window = 5
description = RR - Suspicious activity or known framework detected  - Combined
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=Execution \
|table _time,MachineName,UserName,CommandLine,Description,FileHash,FileName,FilePath,LogOnUsers \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|eval CommandLineShort=if(len(CommandLine)>100,substr(CommandLine,1,100)."..<cut>",CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=Description."FilePath=".FilePath." CommandLine=".CommandLineShort.". LoggedOnUsers=".LogOnUsers." FileHash=".FileHash \
|eval mitre_technique_id="T1059" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval threat_object=CommandLine \
|eval threat_object_type="commandline" \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Malware detected by Windows Defender  - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Malware detected by Windows Defender  - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 53 * * * *
schedule_window = 5
description = Malware and unwanted software are undesirable applications that perform annoying, disruptive, or harmful actions on affected machines. Some of these undesirable applications can replicate and spread from one machine to another. Others are able to receive commands from remote attackers and perform activities associated with cyber attacks.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=Malware \
|table _time,MachineName,UserName,CommandLine,AlertTitle,Description,FileHash,FileName,FilePath,LogOnUsers,ThreatCategory,ThreatFamily,ThreatName,RemediationAction,RemediationIsSuccess \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|eval CommandLine=if(len(CommandLine)>100,substr(CommandLine,1,100)."..<cut>",CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=AlertTitle." ThreatCategory=".ThreatCategory." ThreatFamily=".ThreatFamily." ThreatName=".ThreatName." FilePath=".FilePath." CommandLine=".CommandLine." LoggedOnUsers=".LogOnUsers." FileHash=".FileHash." RemediationAction=".RemediationAction." RemediationSuccess=".RemediationIsSuccess \
|eval mitre_technique_id="T1059" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval threat_object=FileHash \
|eval threat_object_type="filehash" \
|eval threat_object=if(len(FileHash)>1,FileHash,CommandLine) \
|eval threat_object_type=if(len(FileHash)>1,"filehash","commandline") \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Suspicious service or registry change detected  - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious service or registry change detected  - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 7 * * * *
schedule_window = 5
description = A system program was registered as a service or a suspicious registry change was detected by Windows Defender. This can indicate malicious intent to establish persistence or gain system privileges.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=Persistence \
|table _time,MachineName,UserName,CommandLine,AlertTitle,Description,FileHash,FileName,FilePath,LogOnUsers \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|eval CommandLineShort=if(len(CommandLine)>100,substr(CommandLine,1,100)."..<cut>",CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=AlertTitle.". ".Description." FilePath=".FilePath." CommandLine=".CommandLineShort." LoggedOnUsers=".LogOnUsers." FileHash=".FileHash \
|eval mitre_technique_id="T1031" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Suspicious activity related to escalation of privs has been detected - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious activity related to escalation of privs has been detected - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 9 * * * *
schedule_window = 5
description = Suspicious named pipes or process interaction that typically involves a UAC prompt has been detected. Attackers leverage named pipes for command-and-control, inter-process communication, and data exfiltration. This type of activity is unusual and suspicious and could be an attempt to elevate privileges without requesting user permission.  Detected by Windows Defender.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search =  `default_index` sourcetype=wdtap:alerts Category=PrivilegeEscalation \
|table _time,MachineName,UserName,CommandLine,AlertTitle,Description,FileHash,FileName,FilePath,LogOnUsers \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|eval CommandLineShort=if(len(CommandLine)>100,substr(CommandLine,1,100)."..<cut>",CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=AlertTitle.". ".Description." CommandLine=".CommandLineShort." LoggedOnUsers=".LogOnUsers." FileHash=".FileHash \
|eval mitre_technique_id="T1088" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval threat_object=FileHash \
|eval threat_object_type="filehash" \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Suspicious CLI command - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious CLI command - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 11 * * * *
schedule_window = 5
description = Suspicious commands being detected by Windows Defender.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=SuspiciousActivity \
|table _time,MachineName,UserName,CommandLine,Description,FileHash,FileName,FilePath,LogOnUsers \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=Description." CommandLine=".CommandLine.". LoggedOnUsers=".LogOnUsers \
|eval mitre_technique_id="T1059" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval threat_object=FileHash \
|eval threat_object_type="filehash" \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Suspicious CLI command related to information gathering - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Suspicious CLI command related to information gathering - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 13 * * * *
schedule_window = 5
description = Commands are being executed that can be used by attackers in order to identify assets of value and coordinate lateral movement after compromising a machine.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype=wdtap:alerts Category=Collection \
|table _time,MachineName,UserName,CommandLine,Description,FileHash,FileName,FilePath,LogOnUsers \
|eval CommandLine=if(CommandLine="",FilePath."\\".FileName,CommandLine) \
|dedup _time \
|eval user=LogOnUsers \
|makemv delim=";" user \
|mvexpand user \
|rex field=user mode=sed "s/.*\\\\//g" \
|rename MachineName as src \
\
|eval risk_message=Description." CommandLine=".CommandLine.". LoggedOnUsers=".LogOnUsers.". FileName=".FileName.". FilePath=".FilePath \
|eval mitre_technique_id="T1119" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval threat_object=if(len(CommandLine)>1,CommandLine,FilePath."\\".FileName) \
|eval threat_object="commandline" \
|eval testmode="0" \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Remotely Query Login Sessions - Process - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Remotely Query Login Sessions - Process - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 30 * * * *
schedule_window = 5
description =Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.
disabled = 1
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="qwinsta.exe") \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
|table _time user src Event* Image ParentCommandLine action RuleName\
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Remotely Query Login Sessions.  src=".src.". EventDescription=".EventDescription.". Command=".Image.". ParentCommandLine=".ParentCommandLine.". action=".action \
|eval threat_object=ParentCommandLine \
|eval threat_object_type="commandline" \
|eval testmode=0 \
`risk_score_user(user,5)` \
`risk_score_system(src,5)`

[Threat - RR - Credential Dumping - Process Access - System  - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Credential Dumping - Process Access - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 35 * * * *
schedule_window = 5
description = Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=10 (TargetImage="C:\\Windows\\system32\\lsass.exe") AND (GrantedAccess=0x1010 OR GrantedAccess=0x1410 OR GrantedAccess=0x147a OR GrantedAccess=0x143a) CallTrace="C:\\Windows\\SYSTEM32\\ntdll.dll\*|C:\\Windows\\system32\\KERNELBASE.dll*|UNKNOWN(*)" \
|eval src=host \
|table _time user src RuleName \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Credential dumping detected on ".src." where SourceImage=".SourceImage." and TargetImage=".TargetImage \
|eval testmode=0 \
`risk_score_system(src,5)`

[Threat - RR - Credential Dumping - Registry - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Credential Dumping - Registry - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 35 * * * *
schedule_window = 5
description = Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" (EventCode=12 OR EventCode=13 OR EventCode=14) process_path!="C:\\WINDOWS\\system32\\lsass.exe"  (registry_path="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\\Credential Provider\\*" OR registry_path="*\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\*" OR registry_path="*\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SecurityProviders\\*" OR registry_path="*\\Control\\SecurityProviders\\WDigest\\*") NOT registry_path="*\\Lsa\\RestrictRemoteSamEventThrottlingWindow" \
|table _time host, registry_path, Event*, action, process_path RuleName \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Image File Execution Options Injection. ".EventDescription.". host=".host.". action=".action.". eventtype=".EventType.". registry_path=".registry_path.". process_path=".process_path \
|eval threat_object=registry_path \
|eval threat_object_type="registrypath" \
|eval testmode=0 \
`risk_score_system(src,5)`

[Threat - RR -  Image File Execution Options Injection - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR -  Image File Execution Options Injection - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 15 * * * *
schedule_window = 5
description = Image File Execution Options (IFEO) enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" (EventCode=12 OR EventCode=13 OR EventCode=14) (registry_path="HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*") \
|table _time host, registry_path, Event*, action, process_path RuleName\
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
| eval risk_message="Image File Execution Options Injection. ".EventDescription.". host=".host.". action=".action.". eventtype=".EventType.". registry_path=".registry_path.". process_path=".process_path \
|eval threat_object=registry_path \
|eval threat_object_type="registrypath" \
|eval testmode=0 \
`risk_score_system(src,5)`

[Threat - RR - System Network Configuration discovery - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - System Network Configuration discovery - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 45 * * * *
schedule_window = 5
description = Adversaries will likely look for details about the network configuration and settings of systems they access or through information discovery of remote systems.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="net.exe" AND process="*net* config*") OR (process_name="ipconfig.exe" OR process_name="netsh.exe" OR process_name="arp.exe" OR process_name="nbtstat.exe") \
| table  _time Description host user process* parent* RuleName \
| eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message=Description.". Process Current Directory:".process_current_directory.". Process:".process \
|eval threat_object=process \
|eval threat_object_type="commandline" \
|eval testmode=0 \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Remote System Discovery - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Remote System discovery - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 25 * * * *
schedule_window = 5
description = Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="net.exe" OR process_name="ping.exe") AND (process="*net* view*" OR process="*ping *") \
|table _time EventDescription host user process* parent* RuleName Description CurrentDirectory CommandLine RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Adversaries will likely attempt to get a remote listing of network services for the purpose of lateral movement. Event description:".Description.". Current Dir:".CurrentDirectory.". CommandLine:".CommandLine.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=CommandLine \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - System Owner/User discovery - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - System Owner/User discovery - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 40 * * * *
schedule_window = 5
description = Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="whoami.exe" OR process="*whoami*" OR process="wmic* useraccount get /ALL" OR process_name="qwinsta.exe" OR process_name="quser.exe") \
|table _time EventDescription host user process* parent* RuleName Description CurrentDirectory CommandLine \
| eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. Event description:".Description.". Current Dir:".CurrentDirectory.". CommandLine:".CommandLine.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=CommandLine \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Masquerading - Renamed Binary - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Masquerading - Renamed Binary - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 5 * * * *
schedule_window = 5
description = A binary has been renamed to another name.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 \
|eval process_name=lower(process_name) \
|eval original_file_name=lower(OriginalFileName) \
|where process_name!=original_file_name \
|search original_file_name!="w32time.dll" \
|table _time original* process* parent* app* Description Current* cmdline user host RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="A binary has been renamed to another name.  Original name:".original_file_name." was renamed to ".process_name.". Command:".cmdline \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Commonly Used Port - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Commonly Used Port - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 55 * * * *
schedule_window = 5
description = Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. Does not include 80 or 443.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=3 \
(dest_port="22" OR dest_port="23" OR dest_port="25" OR dest_port="135" OR dest_port="3389" OR dest_port="5800" OR dest_port="5900" OR dest_port="8080") Initiated=true \
|table _time user host src_ip src_port dest_ip dest_port dest_dns dest_nt_host process_path RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
|eval dest=if(len(dest_dns)>1,dest_dns,dest_nt_host) \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="A commonly used port was observed. source=".src_ip."/".src_port."-->".dest_ip."/".dest_port.".  Process path=".process_path \
|eval testmode=0 \
`risk_score_system(src,1)` \
`risk_score_user(user,1)`

[Threat - RR - System Network Connections discovery - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - System Network Connections discovery - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 25 * * * *
schedule_window = 5
description = Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="net.exe" OR process_name="netstat.exe") AND (process="*net* use*" OR process="*net* sessions*" OR process="*net* file*" OR process="*netstat*") OR process="*Get-NetTCPConnection*" \
|table _time host user dest cmdline CurrentDirectory ParentCommandLine RuleName \
| eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
|eval dest=if(len(dest_dns)>1,dest_dns,dest_nt_host) \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Network discovery techniques observed. cmdline:".cmdline.". CurrentDirectory:".CurrentDirectory.". ParentCommandLine:".ParentCommandLine \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,1)` \
`risk_score_user(user,1)`

[Threat - RR - Scheduled Task - Process - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Scheduled Task - Process - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 20 * * * *
schedule_window = 5
description = An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="taskeng.exe" OR process_name="schtasks.exe" OR process_name="svchost.exe" parent_process_path!="C:\\Windows\\System32\\services.exe") \
|table _time host user cmdline CurrentDirectory ParentCommandLine RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|eval mitre_technique_id="T1053" \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Network discovery techniques observed. cmdline:".cmdline.". CurrentDirectory:".CurrentDirectory.". ParentCommandLine:".ParentCommandLine \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)` \
|eval threat_object=ParentCommandLine \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Registry Run Keys or Start Folder - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Registry Run Keys or Start Folder - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 5 * * * *
schedule_window = 5
description = Adding an entry to the run keys in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" (EventCode=12 OR EventCode=13 OR EventCode=14) (registry_path="*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run*" OR registry_path="*\\Software\\Microsoft\\Windows\\CurrentVersion\Explorer\\*Shell Folders") \
|table _time host registry_path registry_key_name Event*, action process_path RuleName \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Registry run keys. ".EventDescription.". host=".host.". action=".action.". eventtype=".EventType.". registry_path=".registry_path.". process_path=".process_path \
|eval testmode=0 \
|eval threat_object=registry_path \
|eval threat_object_type="registrypath" \
`risk_score_system(src,5)`

[Threat - RR - Permission Groups discovery - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Permission Groups discovery - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 50 * * * *
schedule_window = 5
description = Adversaries may attempt to find local system or domain-level groups and permissions settings.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 process_name="net.exe" AND (process="*net* user*" OR process="*net* group*" OR process="*net* localgroup*" OR process="*get-localgroup*" OR process="*get-ADPrinicipalGroupMembership*") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Permission Group Discovery. ".EventDescription.". cmdline:".cmdline.". CurrentDirectory:".CurrentDirectory.". parent_process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)` \
|eval threat_object=parent_process \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Indicator Removal on Host - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Indicator Removal on Host - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 35 * * * *
schedule_window = 5
description = Adversaries may delete or alter generated artifacts on a host system, including logs and potentially captured files such as quarantined malware.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="wevtutil.exe" OR process="*wevtutil* cl*") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Indicator removal on src=".src."Description:".EventDescription.". Current Dir:".CurrentDirectory.". CommandLine:".CommandLine.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Data Staged - Process - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Data Staged - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 50 * * * *
schedule_window = 5
description = Collected data is staged in a central location or directory prior to Exfiltration.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process="*DownloadString*" AND process="*Net.WebClient*" process="*New-Object*" AND process="*IEX*") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?),"\
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Data statged for possible exfil on src=".src."Description:".EventDescription.". Current Dir:".CurrentDirectory.". CommandLine:".CommandLine.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Remote Desktop Protocol - Network - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Remote Desktop Protocol - Network - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
schedule_window = 5
description = Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=3 (process_path="*\\tscon.exe" OR process_name="mstsc.exe") OR dest_port=3389 Initiated=true \
|table _time user host src_ip src_port dest_ip dest_port dest_dns dest_nt_host process_path RuleName \
|eval user=mvindex(split(user,"\\"),1)  \
|eval src=host \
|eval dest=if(len(dest_dns)>1,dest_dns,dest_nt_host) \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="RDP Detected. source=".src_ip."/".src_port."-->".dest_ip."/".dest_port.".  Process path=".process_path \
|eval testmode=0 \
`risk_score_system(src,1)` \
`risk_score_user(user,1)`

[Threat - RR - Rundll32 - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Rundll32 - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 15 * * * *
schedule_window = 5
description = Rundll32.exe program can be called to execute an arbitrary binary.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (parent_process_path="*\\rundll32.exe" OR process_name="rundll32.exe") \
|table _time EventDescription host user ParentImage cmdline RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Rundll32.exe program executed a binary. Parent Process:".ParentImage.". cmdline:".cmdline \
|eval testmode=0 \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - PowerShell - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - PowerShell - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
schedule_window = 5
description = Detection of the Use of PowerShell
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="powershell.exe" OR process_name="powershell_ise.exe" OR process_name="psexec.exe") NOT ParentCommandLine=*SplunkUniversalForwarder* \
|table _time host user cmdline CurrentDirectory EventDescription parent_process RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="PowerShell detected. Description:".EventDescription.". Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,1)` \
`risk_score_user(user,1)`

[Threat - RR - PowerShell Downloads - Process - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - PowerShell Downloads - Process - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 55 * * * *
schedule_window = 5
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process="*.Download*" OR process="*Net.WebClient*") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="PowerShell used to initiate a download. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Bypass User Account Control - Process - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Bypass User Account Control - Process - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 40 * * * *
schedule_window = 5
description = Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (parent_process_path="*\\eventvwr.exe" OR parent_process_path="*\\fodhelper.exe") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process_path RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected." \
|eval risk_message="Possible bypass of user account controls. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process_path \
|eval testmode=0 \
|eval threat_object=parent_process_path \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Process Hollowing - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Process Hollowing - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 20 * * * *
schedule_window = 5
description = Process hollowing occurs when a process is created in a suspended state then its memory is unmapped and replaced with malicious code.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="net.exe" OR process_name="ping.exe") AND (process="*net* view*" OR process="*ping *") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process  RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system." \
|eval risk_message="Possible process hollowing. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=parent_process \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - File Deletion - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - File Deletion - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 5 * * * *
schedule_window = 5
description = Adversaries may remove these files over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process="*remove-item*" OR process="vssadmin*Delete Shadows /All /Q*" OR process="*wmic*shadowcopy delete*" OR process="*wbdadmin* delete catalog -q*" OR process="*bcdedit*bootstatuspolicy ignoreallfailures*" OR process="*bcdedit*recoveryenabled no*") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process  RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="File deletion possibley related to the post-intrusion cleanup process. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Bypassing Application Whitelisting with Regsvr32 - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Bypassing Application Whitelisting with Regsvr32 - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 30 * * * *
schedule_window = 5
description = Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of whitelists or false positives from Windows using regsvr32.exe for normal operations.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="regsvr32.exe" OR process_name="rundll32.exe" OR process_name="certutil.exe") OR process="*scrobj.dll*" \
|table _time host user cmdline CurrentDirectory EventDescription parent_process  RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Suspicious register or unregister object linking and embedding controls. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Trusted Developer Utilities - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Trusted Developer Utilities - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
schedule_window = 5
description = There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="MSBuild.exe" OR process_name="msxsl.exe" OR process_name="dnx.exe" OR process_name="rcsi.exe" OR process_name="cdb.exe" OR process_name="WinDbg.exe" OR process_name="tracker.exe") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process  RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Possible bypass of application whitelisting defensive solutions. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=parent_process \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Network Share discovery - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Network Share discovery - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 25 * * * *
schedule_window = 5
description = Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process_name="net.exe" AND (process="*net* view*" OR process="*net* share*")) OR process="*get-smbshare -Name*" \
|table _time host user cmdline CurrentDirectory EventDescription parent_process  RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Remote system discovery possibly related to lateral movement. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Create Account - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Create Account - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
schedule_window = 5
description = Adversaries with a sufficient level of access may create a local system, domain, or cloud tenant account.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" EventCode=1 (process="*New-LocalUser*" OR process="*net*user*add*") \
|table _time host user cmdline CurrentDirectory EventDescription parent_process  RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Creation of a local system, domain, or cloud tenant account. Current Dir:".CurrentDirectory.". CommandLine:".cmdline.". Parent Process:".parent_process \
|eval testmode=0 \
|eval threat_object=cmdline \
|eval threat_object_type="commandline" \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Threat - RR - Detection of MSHTA - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - MSHTA - Network - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 10 * * * *
schedule_window = 5
description = Adversaries can use mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
search = `default_index` sourcetype="xmlwineventlog:microsoft-windows-sysmon/operational" (EventCode=3 OR EventCode=1) (parent_process_path="*\\mshta.exe" OR process_path="*\\mshta.exe") \
|table _time host user Image process_path parent_process_path RuleName \
|eval user=mvindex(split(user,"\\"),1) \
|eval src=host \
|fillnull value="unknown" parent_process_path,process_path \
\
|rex field=RuleName "technique_id=(?<mitre_technique_id>.*?)," \
|lookup mitredict mitre_technique_id OUTPUTNEW mitre_tactic_id \
|eval risk_message="Possible use mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. Image=".Image.". process_path=".process_path.". parent_process_path:".parent_process_path \
|eval testmode=0 \
|eval threat_object=Image \
|eval threat_object_type="commandline"  \
`risk_score_system(src,5)` \
`risk_score_user(user,5)`

[Mitre ATT&CK - Generate Lookup]
action.cefout2.enabled = 0
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.track = 0
description = This search will grab the entire MITRE ATT&CK catalog in its entirety and drop it into the mitre_attack.csv lookup file.
disabled = 1
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","risk_object"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.custom.type = viz_donut_c3.c3donut
display.visualizations.show = 0
display.visualizations.type = custom
request.ui_dispatch_app = SA-RBA
request.ui_dispatch_view = search
search = |genmitrelookup|outputlookup mitre_attack.csv


[RBA DHCP VPN Translation Lookup Gen]
action.cefout2.enabled = 0
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.track = 0
cron_schedule = 1-59/10 * * * *
description = Lookup Generator to populate dhcp_vpn_translations KV Store.
dispatch.earliest_time = -30m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = lookup_editor
request.ui_dispatch_view = search
search = | tstats max(_time) as latest latest(All_Sessions.user) as user latest(All_Sessions.dest_ip) as internal_ip FROM datamodel=Network_Sessions.All_Sessions WHERE nodename="All_Sessions.VPN" All_Sessions.action="added" BY All_Sessions.src_ip \
| rename All_Sessions.src_ip as external_ip \
| eval type="vpn" \
| append \
    [| tstats max(_time) as latest latest(All_Sessions.dest_ip) as internal_ip FROM datamodel=Network_Sessions.All_Sessions WHERE nodename="All_Sessions.DHCP" All_Sessions.action!=blocked All_Sessions.dest_ip!="unknown" BY All_Sessions.src_mac, All_Sessions.src_ip \
    | rename All_Sessions.src_ip AS external_ip All_Sessions.src_mac AS external_mac \
    | `get_asset(external_mac)` \
    | eval type="dhcp" \
    | table latest, internal_ip, external_ip, external_mac, external_mac_dns, type]\
| inputlookup append=t dhcp_vpn_translations\
`comment("Remove records older than a week")`\
| where latest > (NOW() - (60*60*24*7))\
| stats values(external_mac) as external_mac values(external_mac_dns) as external_mac_dns values(user) as user values(internal_ip) as internal_ip by external_ip, latest, type\
| outputlookup dhcp_vpn_translations

[RBA MITRE Context Gen]
action.cefout2.enabled = 0
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.track = 0
dispatch.earliest_time = 0
display.general.timeRangePicker.show = 0
display.visualizations.show = 0
request.ui_dispatch_app = SA-RBA
request.ui_dispatch_view = search
search = | genmitrelookup\
`comment("Populates the mitredict KVStore Lookup - a success message will be displayed once completed")`\
`comment("Requires external access to https://raw.githubusercontent.com/mitre/cti/master/enterprise-attack/enterprise-attack.json")`\
`comment("Use '| inputlookup mitredict' to view data")`

[Threat - RR - UBA Detected Lateral Movement - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - UBA Detected Lateral Movement - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 35 * * * *
description = Splunk UBA generated an anomaly related to lateral movement
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = 5
search = `ueba_index` anomaly_category=LateralMovement user_identity=*\
|mvexpand user\
|rex "rows.+Source.Device.....(?<src>.*?)..,..Target.Device.....(?<dest>.*?)..,.."\
|table _time user,src,dest\
\
|eval risk_message="UBA Detected Lateral Movement for user=".user.", src=".src.", and dest=".dest\
|eval mitre_tactic_id="TA0008"\
|eval testmode=0\
`risk_score_user(user,5)` \
`risk_score_system(src,5)`\
`risk_score_system(dest,5)`


[Threat - RR - UBA Detected Infection - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - UBA Detected Infection - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 45 * * * *
description = Splunk UBA generated an anomaly related to a system infection.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = 5
search = `ueba_index` anomaly_category=Infection dvc_dns=*\
|eval src=dvc_dns\
| fillnull value=Unknown user app\
|table _time src,user,app,severity\
\
|eval risk_message="UBA Detected Infection for user=".user.", src=".src.", app=".app.", and severity=".severity\
|eval mitre_tactic_id="TA0002"\
|eval threat_object=app \
|eval threat_object_type=filename\
|eval testmode=0\
`risk_score_system(src,5)`

[Threat - RR - UBA Detected Infection - User - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - UBA Detected Infection - User
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 45 * * * *
description = Splunk UBA generated an anomaly related to a system infection.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = 5
search = `ueba_index` anomaly_category=Infection user=*\
|eval src=dvc_dns\
| fillnull value=Unknown src app\
|table _time src,user,app,severity\
\
|eval risk_message="UBA Detected Infection for user=".user.", src=".src.", app=".app.", and severity=".severity\
|eval mitre_tactic_id="TA0002"\
|eval threat_object=if(app="Unknown","",app) \
|eval threat_object_type=filename\
|eval testmode=0\
`risk_score_user(user,5)`

[Threat - RR - UBA Detected Exfiltration - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - UBA Detected Exfiltration - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 15 * * * *
description = Splunk UBA generated an anomaly related to data exfiltration.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = 5
search = index=ueba anomaly_category=Exfiltration dvc_dns=*\
|eval src=dvc_dns\
|rex max_match=0 "Destination..........value........(?<dest>.*?)\\\."\
|table _time src,user,severity,dest\
\
|eval risk_message="UBA Detected Exfiltration for user=".user.", src=".src."severity=".severity.", and dest=".dest\
|eval mitre_tactic_id="TA0002"\
|eval testmode=0\
`risk_score_system(src,5)`\
|mvexpand dest\
`risk_score_system(dest,5)`

[Threat - RR - UBA Detected Exfiltration - User - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - UBA Detected Exfiltration - User
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 20 * * * *
description = Splunk UBA generated an anomaly related to data exfiltration.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = 5
search = `ueba_index` anomaly_category=Exfiltration user=*\
|eval src=dvc_dns\
|fillnull value=Unknown src dest\
|rex max_match=0 "Destination..........value........(?<dest>.*?)\\\."\
|table _time src,user,severity,dest\
\
|eval risk_message="UBA Detected Exfiltration for user=".user.", src=".src.", and severity=".severity\
\
|eval mitre_tactic_id="TA0002"\
|eval testmode=0\
`risk_score_user(user,5)`

[Threat - RR - UBA General Anomaly Detected - Combined - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - UBA General Anomaly Detected - Combined
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 35 * * * *
description = Splunk UBA generated a general anomaly.
disabled = 1
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = 5
search = `ueba_index` \
|nomv anomaly_category\
|search anomaly_category="Internal" OR anomaly_category="Outgoing"\
|mvexpand user |mvexpand dvc\
|search NOT (dvc="*.*.*.*" OR dvc="*:*:*:*:*:*:*:*")\
|eval src=dvc\
|table _time user,src,severity\
\
|eval risk_object="UBA Detected Exfiltration for user=".user.", src=".src.", and severity=".severity\
|eval mitre_tactic_id=""\
|eval testmode=0\
`risk_score_user(user,5)`\
`risk_score_system(src,5)`

[Threat - RR - Carbon Black Response Alert - System - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Carbon Black Response Alert - System
action.customsearchbuilder.enabled = false
action.customsearchbuilder.spec = {}
action.notable.param.verbose = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 27 * * * *
description = Carbon Black Response alerts generated at the endpoint make for great risk attributions as they already contain transparent detection logic, scoring, indicators of compromise, and alignments to MITRE ATT&CK technique IDs.
dispatch.earliest_time = -1h@h
dispatch.latest_time = @h
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = 5
search = sourcetype="bit9:carbonblack:json" ioc_value=* report_score > 10 "docs{}.cmdline"=* \
|table _time src mitre_technique_id report_score report_title ioc_query_string "docs{}.cmdline" report_link\
|eval report_score=report_score/10\
|dedup _time  "docs{}.cmdline"\
|fillnull value="general CB response alert" report_title\
\
|eval risk_message="CB Alert: ".report_title.".threat_object: ".'docs{}.cmdline'.". ioc_query_string: ".ioc_query_string\
|rex field=report_link "\/(?<mitre_technique_id>T....)$"\
|eval threat_object='docs{}.cmdline'\
|eval threat_object_type="commmandline"\
|eval testmode="0"\
`risk_score_system(src,report_score)`
